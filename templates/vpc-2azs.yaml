AWSTemplateFormatVersion: 2010-09-09
Description: >
  This template specifies a VPC with a public and a private subnet
  associated with each of two availability zones.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Stack Configuration
        Parameters:
          - pTemplateBucket
          - pTemplateBucketPrefix
      - Label:
          default: VPC Configuration
        Parameters:
          - pCidrBlock
          - pEnableDnsHostnames
          - pEnableDnsSupport
          - pInstanceTenancy
          - pVpcNameTag
      - Label:
          default: Private Subnet 1 Configuration
        Parameters:
          - pPrivateSubnet1CidrBlock
      - Label:
          default: Private Subnet 2 Configuration
        Parameters:
          - pPrivateSubnet2CidrBlock
      - Label:
          default: Public Subnet 1 Configuration
        Parameters:
          - pPublicSubnet1CidrBlock
      - Label:
          default: Public Subnet 2 Configuration
        Parameters:
          - pPublicSubnet2CidrBlock
    ParameterLabels:
      pCidrBlock:
        default: IPv4 CIDR Block
      pEnableDnsHostnames:
        default: Enable DNS Hostnames
      pEnableDnsSupport:
        default: Enable DNS Support
      pInstanceTenancy:
        default: Instance Tenancy
      pPrivateSubnet1CidrBlock:
        default: IPv4 CIDR Block
      pPrivateSubnet2CidrBlock:
        default: IPv4 CIDR Block
      pPublicSubnet1CidrBlock:
        default: IPv4 CIDR Block
      pPublicSubnet2CidrBlock:
        default: IPv4 CIDR Block
      pTemplateBucket:
        default: Template Bucket
      pTemplateBucketPrefix:
        default: Template Bucket Prefix
      pVpcNameTag:
        default: VPC Name Tag
Parameters:
  pCidrBlock:
    Type: String
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    Default: 10.0.0.0/16
    Description: The primary IPv4 CIDR block for the VPC.
  pEnableDnsHostnames:
    Type: String
    AllowedValues:
      - false
      - true
    Default: false
    Description: >
      Indicates whether the instances launched in the VPC get DNS 
      hostnames.
  pEnableDnsSupport:
    Type: String
    AllowedValues:
      - false
      - true
    Default: true
    Description: >
      Indicates whether the DNS resolution is supported for the VPC.
  pInstanceTenancy:
    Type: String
    AllowedValues:
      - dedicated
      - default 
      - host
    Description: >
      The allowed tenancy of instances launched into the VPC.
    Default: default
  pPrivateSubnet1CidrBlock:
    Type: String
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    Default: 10.0.0.0/24
    Description: The IPv4 CIDR block assigned to the subnet.
  pPrivateSubnet2CidrBlock:
    Type: String
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    Default: 10.0.64.0/24
    Description: The IPv4 CIDR block assigned to the subnet.
  pPublicSubnet1CidrBlock:
    Type: String
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    Default: 10.0.128.0/24
    Description: The IPv4 CIDR block assigned to the subnet.
  pPublicSubnet2CidrBlock:
    Type: String
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    Default: 10.0.192.0/24
    Description: The IPv4 CIDR block assigned to the subnet.
  pTemplateBucket:
    Type: String
    Default: aws-tringali-joe
    Description: >
      The S3 bucket from which to fetch the templates used by this stack.
  pTemplateBucketPrefix:
    Type: String
    Default: cloud-formation/templates
    Description: >
      The folder (bucket prefix) from which to fetch the templates used by this stack.
  pVpcNameTag:
    Type: String
    Description: >
      A tag with a key of 'Name' and a value that you specify.
Resources:
  VPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        pCidrBlock: !Ref pCidrBlock
        pEnableDnsHostnames: !Ref pEnableDnsHostnames
        pEnableDnsSupport: !Ref pEnableDnsSupport
        pInstanceTenancy: !Ref pInstanceTenancy
        pNameTag: !Ref pVpcNameTag
      TemplateURL: !Sub "https://${pTemplateBucket}.s3.amazonaws.com/${pTemplateBucketPrefix}/vpc.yaml"
  PrivateSubnet1:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        pAvailabilityZone: !Select [ 0, !GetAZs ]
        pCidrBlock: !Ref pPrivateSubnet1CidrBlock
        pIpv6CidrBlock: AWS::NoValue
        pNameTag: !Sub "${pVpcNameTag}-private-1"
        pVpcId: !GetAtt VPC.Outputs.VpcId
      TemplateURL: !Sub "https://${pTemplateBucket}.s3.amazonaws.com/${pTemplateBucketPrefix}/subnet.yaml"
  PrivateSubnet2:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        pAvailabilityZone: !Select [ 1, !GetAZs ]
        pCidrBlock: !Ref pPrivateSubnet2CidrBlock
        pIpv6CidrBlock: AWS::NoValue
        pNameTag: !Sub "${pVpcNameTag}-private-2"
        pVpcId: !GetAtt VPC.Outputs.VpcId
      TemplateURL: !Sub "https://${pTemplateBucket}.s3.amazonaws.com/${pTemplateBucketPrefix}/subnet.yaml"
  PublicSubnet1:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        pAvailabilityZone: !Select [ 0, !GetAZs ]
        pCidrBlock: !Ref pPublicSubnet1CidrBlock
        pIpv6CidrBlock: AWS::NoValue
        pNameTag: !Sub "${pVpcNameTag}-public-1"
        pVpcId: !GetAtt VPC.Outputs.VpcId
      TemplateURL: !Sub "https://${pTemplateBucket}.s3.amazonaws.com/${pTemplateBucketPrefix}/subnet.yaml"
  PublicSubnet2:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        pAvailabilityZone: !Select [ 1, !GetAZs ]
        pCidrBlock: !Ref pPublicSubnet2CidrBlock
        pIpv6CidrBlock: AWS::NoValue
        pNameTag: !Sub "${pVpcNameTag}-public-2"
        pVpcId: !GetAtt VPC.Outputs.VpcId
      TemplateURL: !Sub "https://${pTemplateBucket}.s3.amazonaws.com/${pTemplateBucketPrefix}/subnet.yaml"